# -*- coding: utf-8 -*-
"""mo-2-7-0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cZfXUN8U7y6j9Cx5Ht12EsiCsnwZJOwy

# Лабораторная работа №7

## Рекуррентные нейронные сети для анализа текста

Набор данных для предсказания оценок для отзывов, собранных с сайта _imdb.com_, который состоит из 50,000 отзывов в виде текстовых файлов.

Отзывы разделены на положительные (25,000) и отрицательные (25,000).

Данные предварительно токенизированы по принципу «мешка слов», индексы слов можно взять из словаря (_imdb.vocab_).

Обучающая выборка включает в себя 12,500 положительных и 12,500 отрицательных отзывов, контрольная выборка также содержит 12,500 положительных и 12,500 отрицательных отзывов.

Данные можно скачать на сайте _Kaggle_: https://www.kaggle.com/iarunava/imdb-movie-reviews-dataset

### Задание 1

Загрузите данные. Преобразуйте текстовые файлы во внутренние структуры данных, которые используют индексы вместо слов.

Оригинальная ссылка отдавала 404, поэтому был использован другой датасет, похожий по описанию: https://www.kaggle.com/jcblaise/imdb-sentiments, а токенизация проведена самостоятельно.
"""

from google.colab import drive

drive.mount('/content/drive', force_remount = True)

BASE_DIR = '/content/drive/My Drive/Colab Files/mo-2'

import sys

sys.path.append(BASE_DIR)

import os

DATA_ARCHIVE_NAME = 'imdb-sentiments.zip'

LOCAL_DIR_NAME = 'imdb-sentiments'

from zipfile import ZipFile

with ZipFile(os.path.join(BASE_DIR, DATA_ARCHIVE_NAME), 'r') as zip_:
    zip_.extractall(LOCAL_DIR_NAME)

TRAIN_FILE_PATH = 'imdb-sentiments/train.csv'
TEST_FILE_PATH = 'imdb-sentiments/test.csv'

import pandas as pd

train_df = pd.read_csv(TRAIN_FILE_PATH)
test_all_df = pd.read_csv(TEST_FILE_PATH)

print(train_df.shape)
print(test_all_df.shape)

"""### Задание 2

Реализуйте и обучите двунаправленную рекуррентную сеть (_LSTM_ или _GRU_).

Какого качества классификации удалось достичь?

### Задание 3

Используйте индексы слов и их различное внутреннее представление (_word2vec_, _glove_). Как влияет данное преобразование на качество классификации?

### Задание 4

Поэкспериментируйте со структурой сети (добавьте больше рекуррентных, полносвязных или сверточных слоев). Как это повлияло на качество классификации?

### Задание 5

Используйте предобученную рекуррентную нейронную сеть (например, _DeepMoji_ или что-то подобное).

Какой максимальный результат удалось получить на контрольной выборке?
"""